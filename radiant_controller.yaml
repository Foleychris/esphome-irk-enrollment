substitutions:
  device_name: radiant_controller

esphome:
  name: radiant_controller
  friendly_name: Radiant Controller
  on_boot:
    then:
      pcf85063.read_time: # read RTC time once the system boots

esp32:
  board: esp32dev

api:

ota:

# see https://github.com/dtlzp/relay_dev_demo

# Enable logging
logger:
  level: DEBUG
  baud_rate: 0

    #wifi:
    #  ssid: 74ax4k
    #  password: twosigma
ethernet:
  type: JL1101
  mdc_pin: GPIO23
  mdio_pin: GPIO18
  power_pin: GPIO12
  clk_mode: GPIO17_OUT
  phy_addr: 0

uart:
  tx_pin: GPIO1
  rx_pin: GPIO3
  baud_rate: 9600
  stop_bits: 1

modbus:
  flow_control_pin: GPIO33
  id: modbus1

modbus_controller:
  id: modbus_ctl
  address: 0x1
  modbus_id: modbus1
  setup_priority: -10

i2c:
  scl: GPIO32
  sda: GPIO16
  scan: true
  id: i2c_bus

sn74hc595:
  - id: sn74hc595_hub
    data_pin: GPIO13 #SER
    clock_pin: GPIO14 #SRCLK
    latch_pin: GPIO15 #RCLK
    oe_pin: GPIO0
    sr_count: 2

#sn74hc165:
#  - id: sn74hc165_hub
#    clock_pin: GPIO14
#    data_pin: GPIO35
#    load_pin: GPIO0
#    clock_inhibit_pin: GPIO15
#    sr_count: 2

time:
  - platform: pcf85063
    update_interval: never # internal clock is fine for general use
  - platform: homeassistant
    on_time_sync:
      then:
        pcf85063.write_time: # sync RTC to HA when available

sensor:
  - platform: modbus_controller
    modbus_controller_id: modbus_ctl
    name: NTC modbus address
    register_type: holding
    address: 0x0
    value_type: U_WORD
  - platform: modbus_controller
    modbus_controller_id: modbus_ctl
    name: Baud Rate
    register_type: holding
    address: 0x1
    value_type: U_WORD
  - platform: modbus_controller
    modbus_controller_id: modbus_ctl
    name: NTC B Value
    register_type: holding
    address: 0x2
    value_type: U_WORD
  - platform: modbus_controller
    modbus_controller_id: modbus_ctl
    name: Room 0 Temperature
    id: temp_room0
    register_type: holding
    address: 1024
    unit_of_measurement: ºC
    value_type: U_WORD
    filters:
      - multiply: 0.1
  - platform: modbus_controller
    modbus_controller_id: modbus_ctl
    name: Room 1 Temperature
    id: temp_room1
    register_type: holding
    address: 1025
    unit_of_measurement: ºC
    value_type: U_WORD
    filters:
      - multiply: 0.1
    # TODO here we need to check if the floor is overheating, and if so, turn off the pump
  - platform: modbus_controller
    modbus_controller_id: modbus_ctl
    name: Room 2 Temperature
    id: temp_room2
    register_type: holding
    address: 1026
    unit_of_measurement: ºC
    value_type: U_WORD
    filters:
      - multiply: 0.1
  - platform: modbus_controller
    modbus_controller_id: modbus_ctl
    name: Room 3 Temperature
    id: temp_room3
    register_type: holding
    address: 1027
    unit_of_measurement: ºC
    value_type: U_WORD
    filters:
      - multiply: 0.1
  - platform: modbus_controller
    modbus_controller_id: modbus_ctl
    name: Room 4 Temperature
    id: temp_room4
    register_type: holding
    address: 1028
    unit_of_measurement: ºC
    value_type: U_WORD
    filters:
      - multiply: 0.1
  - platform: modbus_controller
    modbus_controller_id: modbus_ctl
    name: Room 5 Temperature
    id: temp_room5
    register_type: holding
    address: 1029
    unit_of_measurement: ºC
    value_type: U_WORD
    filters:
      - multiply: 0.1
  - platform: modbus_controller
    modbus_controller_id: modbus_ctl
    name: Room 6 Temperature
    id: temp_room6
    register_type: holding
    address: 1030
    unit_of_measurement: ºC
    value_type: U_WORD
    filters:
      - multiply: 0.1
  - platform: modbus_controller
    modbus_controller_id: modbus_ctl
    name: Room 7 Temperature
    id: temp_room7
    register_type: holding
    address: 1031
    unit_of_measurement: ºC
    value_type: U_WORD
    filters:
      - multiply: 0.1
  - platform: modbus_controller
    modbus_controller_id: modbus_ctl
    name: Room 8 Temperature
    id: temp_room8
    register_type: holding
    address: 1032
    unit_of_measurement: ºC
    value_type: U_WORD
    filters:
      - multiply: 0.1
  - platform: modbus_controller
    modbus_controller_id: modbus_ctl
    name: Room 9 Temperature
    id: temp_room9
    register_type: holding
    address: 1033
    unit_of_measurement: ºC
    value_type: U_WORD
    filters:
      - multiply: 0.1
  - platform: modbus_controller
    modbus_controller_id: modbus_ctl
    name: Room 10 Temperature
    id: temp_room10
    register_type: holding
    address: 1034
    unit_of_measurement: ºC
    value_type: U_WORD
    filters:
      - multiply: 0.1
  - platform: modbus_controller
    modbus_controller_id: modbus_ctl
    name: Room 11 Temperature
    id: temp_room11
    register_type: holding
    address: 1035
    unit_of_measurement: ºC
    value_type: U_WORD
    filters:
      - multiply: 0.1

switch:
  - platform: gpio
    name: Factory LED
    pin:
      number: GPIO2
  - platform: gpio
    name: Relay 16 control
    id: relay16ctl
    pin:
      sn74hc595: sn74hc595_hub
      number: 0
      inverted: false
  - platform: gpio
    name: Relay 15 control
    id: relay15ctl
    pin:
      sn74hc595: sn74hc595_hub
      number: 1
      inverted: false
  - platform: gpio
    name: Relay 14 control
    id: relay14ctl
    pin:
      sn74hc595: sn74hc595_hub
      number: 2
      inverted: false
  - platform: gpio
    name: Relay 13 control
    id: relay13ctl
    pin:
      sn74hc595: sn74hc595_hub
      number: 3
      inverted: false
  - platform: gpio
    name: Relay 12 control
    id: relay12ctl
    pin:
      sn74hc595: sn74hc595_hub
      number: 4
      inverted: false
  - platform: gpio
    name: Relay 11 control
    id: relay11ctl
    pin:
      sn74hc595: sn74hc595_hub
      number: 5
      inverted: false
  - platform: gpio
    name: Relay 10 control
    id: relay10ctl
    pin:
      sn74hc595: sn74hc595_hub
      number: 6
      inverted: false
  - platform: gpio
    name: Relay 9 control
    id: relay9ctl
    pin:
      sn74hc595: sn74hc595_hub
      number: 7
      inverted: false
  - platform: gpio
    name: Relay 8 control
    id: relay8ctl
    pin:
      sn74hc595: sn74hc595_hub
      number: 8
      inverted: false
  - platform: gpio
    name: Relay 7 control
    id: relay7ctl
    pin:
      sn74hc595: sn74hc595_hub
      number: 9
      inverted: false
  - platform: gpio
    name: Relay 6 control
    id: relay6ctl
    pin:
      sn74hc595: sn74hc595_hub
      number: 10
      inverted: false
  - platform: gpio
    name: Relay 5 control
    id: relay5ctl
    pin:
      sn74hc595: sn74hc595_hub
      number: 11
      inverted: false
  - platform: gpio
    name: Relay 4 control
    id: relay4ctl
    pin:
      sn74hc595: sn74hc595_hub
      number: 12
      inverted: false
  - platform: gpio
    name: Relay 3 control
    id: relay3ctl
    pin:
      sn74hc595: sn74hc595_hub
      number: 13
      inverted: false
  - platform: gpio
    name: Relay 2 control
    id: relay2ctl
    pin:
      sn74hc595: sn74hc595_hub
      number: 14
      inverted: false
  - platform: gpio
    name: Relay 1 control
    id: relay1ctl
    pin:
      sn74hc595: sn74hc595_hub
      number: 15
      inverted: false

output:
  - platform: sigma_delta_output
    update_interval: 30s
    id: heater_room1
    turn_on_action:
      # TODO here we need to check that the floor isn't overheating
      # really should register intention in a template
      - switch.turn_on: relay1ctl
    turn_off_action:
      - switch.turn_off: relay1ctl

climate:
  platform: pid
  name: PID Climate Controller
  sensor: temp_room1
  default_target_temperature: 21
  heat_output: heater_room1
  control_parameters:
    kp: 0
    ki: 0
    kd: 0
    output_averaging_samples: 5
    derivative_averaging_samples: 5
  deadband_parameters:
    threshold_high: 0.5
    threshold_low: -0.5

binary_sensor:
  - platform: gpio
    name: Factory Button
    pin:
      number: GPIO34
      inverted: true
# - platform: gpio
#   name: input8
#   pin:
#     sn74hc165: sn74hc165_hub
#     number: 0
#     inverted: true
# - platform: gpio
#   name: input7
#   pin:
#     sn74hc165: sn74hc165_hub
#     number: 1
#     inverted: true
# - platform: gpio
#   name: input6
#   pin:
#     sn74hc165: sn74hc165_hub
#     number: 2
#     inverted: true
# - platform: gpio
#   name: input5
#   pin:
#     sn74hc165: sn74hc165_hub
#     number: 3
#     inverted: true
# - platform: gpio
#   name: input4
#   pin:
#     sn74hc165: sn74hc165_hub
#     number: 4
#     inverted: true
# - platform: gpio
#   name: input3
#   pin:
#     sn74hc165: sn74hc165_hub
#     number: 5
#     inverted: true
# - platform: gpio
#   name: input2
#   pin:
#     sn74hc165: sn74hc165_hub
#     number: 6
#     inverted: true
# - platform: gpio
#   name: input1
#   pin:
#     sn74hc165: sn74hc165_hub
#     number: 7
#     inverted: true
# - platform: gpio
#   name: input16
#   pin:
#     sn74hc165: sn74hc165_hub
#     number: 8
#     inverted: true
# - platform: gpio
#   name: input15
#   pin:
#     sn74hc165: sn74hc165_hub
#     number: 9
#     inverted: true
# - platform: gpio
#   name: input14
#   pin:
#     sn74hc165: sn74hc165_hub
#     number: 10
#     inverted: true
# - platform: gpio
#   name: input13
#   pin:
#     sn74hc165: sn74hc165_hub
#     number: 11
#     inverted: true
# - platform: gpio
#   name: input12
#   pin:
#     sn74hc165: sn74hc165_hub
#     number: 12
#     inverted: true
# - platform: gpio
#   name: input11
#   pin:
#     sn74hc165: sn74hc165_hub
#     number: 13
#     inverted: true
# - platform: gpio
#   name: input10
#   pin:
#     sn74hc165: sn74hc165_hub
#     number: 14
#     inverted: true
# - platform: gpio
#   name: input9
#   pin:
#     sn74hc165: sn74hc165_hub
#     number: 15
#     inverted: true
